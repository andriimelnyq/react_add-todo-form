{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","userId","user","usersFromServer","find","curentUser","className","href","TodoInfo","todo","title","completed","TodoList","todos","map","App","useState","setTitle","setUserId","todosFromServer","setTodos","errorTitle","setErrorTitle","errorUser","setErrorUser","action","method","onSubmit","e","preventDefault","todosIdArr","newTodo","Math","max","handleSubmit","type","value","onChange","target","match","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2c2617a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../../api/users';\n\ntype Props = {\n  userId: number,\n};\n\nexport const UserInfo = ({ userId }: Props) => {\n  const user = usersFromServer\n    .find(curentUser => curentUser.id === userId);\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo = ({ todo }: Props) => {\n  const {\n    id, title, completed, userId,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${completed && 'TodoInfo--completed'}`}\n      key={id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo userId={userId} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList = ({ todos }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState(todosFromServer);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const handleTitle = (value: string) => {\n    const pattern = /^[A-Za-z0-9а-яА-ЯёЁіІїЇ ]+$/;\n\n    if (value.match(pattern)) {\n      setTitle(value);\n    }\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const todosIdArr = todos.map(todo => todo.id);\n    const idNewTodo = Math.max(...todosIdArr) + 1;\n    const newTodo = {\n      id: idNewTodo,\n      title,\n      userId,\n      completed: false,\n    };\n\n    if (title && userId) {\n      setTodos([\n        ...todos,\n        newTodo,\n      ]);\n      setTitle('');\n      setUserId(0);\n    }\n\n    setErrorTitle(!title);\n    setErrorUser(!userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={e => handleSubmit(e)}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={e => handleTitle(e.target.value)}\n          />\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={e => setUserId(+e.target.value)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}